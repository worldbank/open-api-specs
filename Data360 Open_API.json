{
  "openapi": "3.0.1",
  "info": {
    "title": "Data360.API",
    "description": "This API provides users access to metadata and data files for datasets within the World Bank's Data360 Data.",
    "contact": {
      "name": "Data360 Data Support",
      "email": "data@worldbank.org"
    },
    "license": {
      "name": "Creative Commons 4.0 by Attribution",
      "url": "https://creativecommons.org/licenses/by/4.0"
    },
    "version": "v1"
  },
  "servers": [
      {
        "url": "https://data360api.worldbank.org",
        "description": "Production server"
      }
    ],
    "tags": [
      {
        "name": "Data360",
        "description": "Endpoints for data retrieval."
      },
      {
        "name": "Search",
        "description": "Endpoints for metadata and search functionality."
      }
    ],
  "paths": {
    "/data360/data": {
      "get": {
        "summary": "Retrieve data based on provided filters",
        "description": "Retrieves dataset or indicators data based on a range of query filters.",
        "tags": [
          "Data360"
        ],
        "parameters": [
          { "$ref": "#/components/parameters/databaseIdQuery" },
          { "$ref": "#/components/parameters/topQuery" },
          { "$ref": "#/components/parameters/skipQuery" },
          { "$ref": "#/components/parameters/indicatorQuery" },
          { "$ref": "#/components/parameters/refAreaQuery" },
          { "$ref": "#/components/parameters/sexQuery" },
          { "$ref": "#/components/parameters/ageQuery" },
          { "$ref": "#/components/parameters/urbanisationQuery" },
          { "$ref": "#/components/parameters/compBreakdown1Query" },
          { "$ref": "#/components/parameters/compBreakdown2Query" },
          { "$ref": "#/components/parameters/compBreakdown3Query" },
          { "$ref": "#/components/parameters/timePeriodQuery" },
          { "$ref": "#/components/parameters/freqQuery" },
          { "$ref": "#/components/parameters/unitMeasureQuery" },
          { "$ref": "#/components/parameters/unitTypeQuery" },
          { "$ref": "#/components/parameters/unitMultQuery" },
          { "$ref": "#/components/parameters/timePeriodFromQuery" },
          { "$ref": "#/components/parameters/timePeriodToQuery" },
          { "$ref": "#/components/parameters/bondTypeQuery" },
          { "$ref": "#/components/parameters/tenorBucketQuery" },
          { "$ref": "#/components/parameters/issuerTypeQuery" },
          { "$ref": "#/components/parameters/issNameQuery" },
          { "$ref": "#/components/parameters/isinQuery" },
          { "$ref": "#/components/parameters/tenorQuery" },
          { "$ref": "#/components/parameters/outstandingQuery" },
          { "$ref": "#/components/parameters/dealSizeQuery" },
          { "$ref": "#/components/parameters/metricQuery" },
          { "$ref": "#/components/parameters/currencyQuery" },
          { "$ref": "#/components/parameters/dateIssQuery" },
          { "$ref": "#/components/parameters/dateMatQuery" },
          { "$ref": "#/components/parameters/isLatestDataQuery" },
          { "$ref": "#/components/parameters/formatQuery" },
          { "$ref": "#/components/parameters/selectQuery" },
          { "$ref": "#/components/parameters/filterQuery" }
        ], 
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/data360/disaggregation": {
      "get": {
        "tags": [
          "Data360"
        ],
        "description": "Get Disaggregation Data",
        "parameters": [
          {
            "name": "datasetId",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indicatorId",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/data360/indicators": {
      "get": {
        "tags": [
          "Data360"
        ],
        "description": "Get Indicators",
        "parameters": [
          {
            "name": "datasetId",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/data360/saveuseraction": {
      "post": {
        "tags": [
          "Data360"
        ],
        "description": "Endpoint to Save User Actions",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/data360/getuseraction": {
      "get": {
        "tags": [
          "Data360"
        ],
        "description": "Get User Actions",
        "parameters": [
          {
            "name": "datasetId",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indicator",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/data360/metadata": {
      "post": {
        "tags": [
          "Search"
        ],
        "description": "Get Meta Data",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/data360/searchv3": {
      "post": {
        "tags": [
          "Search"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQueryVector"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQueryVector"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQueryVector"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "databaseIdQuery": {
        "name": "DATABASE_ID",
        "in": "query",
        "description": "Unique identifier for the database.",
        "required": true,
        "schema": { "type": "string" },
        "example": "WB_WDI"
      },
      "topQuery": {
        "name": "top",
        "in": "query",
        "description": "Maximum number of records to return.",
        "required": false,
        "schema": { "type": "integer", "format": "int32", "default": 1000 },
        "example": 20
      },
      "skipQuery": {
        "name": "skip",
        "in": "query",
        "description": "Number of records to skip.",
        "required": false,
        "schema": { "type": "integer", "format": "int32", "default": 0 },
        "example": 0
      },
      "indicatorQuery": {
        "name": "INDICATOR",
        "in": "query",
        "description": "Indicator ID.",
        "required": false,
        "schema": { "type": "string" },
        "example": "WB_WDI_SP_POP_TOTL"
      },
      "refAreaQuery": {
        "name": "REF_AREA",
        "in": "query",
        "description": "Reference area code (e.g., country code).",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "sexQuery": {
        "name": "SEX",
        "in": "query",
        "description": "Sex of the subjects, if applicable.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "ageQuery": {
        "name": "AGE",
        "in": "query",
        "description": "Age group filter.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "urbanisationQuery": {
        "name": "URBANISATION",
        "in": "query",
        "description": "Urbanisation filter.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "compBreakdown1Query": {
        "name": "COMP_BREAKDOWN_1",
        "in": "query",
        "description": "Indicator specific dimension.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "compBreakdown2Query": {
        "name": "COMP_BREAKDOWN_2",
        "in": "query",
        "description": "Indicator specific dimensionn.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "compBreakdown3Query": {
        "name": "COMP_BREAKDOWN_3",
        "in": "query",
        "description": "Indicator specific dimensionn.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "timePeriodQuery": {
        "name": "TIME_PERIOD",
        "in": "query",
        "description": "Time period for the data.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "freqQuery": {
        "name": "FREQ",
        "in": "query",
        "description": "Frequency of the data.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "unitMeasureQuery": {
        "name": "UNIT_MEASURE",
        "in": "query",
        "description": "Unit of measure for the data.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "unitTypeQuery": {
        "name": "UNIT_TYPE",
        "in": "query",
        "description": "Type of unit (e.g., 'currency', 'percentage').",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "unitMultQuery": {
        "name": "UNIT_MULT",
        "in": "query",
        "description": "Multiplier for the unit.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "timePeriodFromQuery": {
        "name": "timePeriodFrom",
        "in": "query",
        "description": "Start of the time period range.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "timePeriodToQuery": {
        "name": "timePeriodTo",
        "in": "query",
        "description": "End of the time period range.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "bondTypeQuery": {
        "name": "BOND_TYPE",
        "in": "query",
        "description": "Type of bond, if applicable.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "tenorBucketQuery": {
        "name": "TENOR_BUCKET",
        "in": "query",
        "description": "Bucket for the bond tenor.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "issuerTypeQuery": {
        "name": "ISSUER_TYPE",
        "in": "query",
        "description": "Type of issuer.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "issNameQuery": {
        "name": "ISS_NAME",
        "in": "query",
        "description": "Name of the issuer.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "isinQuery": {
        "name": "ISIN",
        "in": "query",
        "description": "International Securities Identification Number.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "tenorQuery": {
        "name": "TENOR",
        "in": "query",
        "description": "Tenor of the bond.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "outstandingQuery": {
        "name": "OUTSTANDING",
        "in": "query",
        "description": "Outstanding value, if applicable.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "dealSizeQuery": {
        "name": "DEAL_SIZE",
        "in": "query",
        "description": "Deal size for the bond issuance.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "metricQuery": {
        "name": "METRIC",
        "in": "query",
        "description": "Metric to be used for the data.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "currencyQuery": {
        "name": "CURRENCYy",
        "in": "query",
        "description": "Currency code (e.g., USD, EUR).",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "dateIssQuery": {
        "name": "DATE_ISS",
        "in": "query",
        "description": "Issue date of the bond.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "dateMatQuery": {
        "name": "DATE_MAT",
        "in": "query",
        "description": "Maturity date of the bond.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "isLatestDataQuery": {
        "name": "isLatestData",
        "in": "query",
        "description": "Flag indicating whether to retrieve the latest data.",
        "required": false,
        "schema": { "type": "boolean", "default": false, "nullable": true },
        "example": ""
      },
      "formatQuery": {
        "name": "format",
        "in": "query",
        "description": "Response format, e.g., json.",
        "required": false,
        "schema": { "type": "string", "default": "json" },
        "example": ""
      },
      "selectQuery": {
        "name": "select",
        "in": "query",
        "description": "Fields to select in the response.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "filterQuery": {
        "name": "filter",
        "in": "query",
        "description": "Filter criteria for the data.",
        "required": false,
        "schema": { "type": "string" },
        "example": ""
      },
      "datasetIdQuery": {
        "name": "datasetId",
        "in": "query",
        "description": "Unique identifier for the dataset.",
        "required": true,
        "schema": { "type": "string" },
        "example": "dataset123"
      },
      "indicatorIdQuery": {
        "name": "indicatorId",
        "in": "query",
        "description": "Unique identifier for the indicator.",
        "required": true,
        "schema": { "type": "string" },
        "example": "indicator456"
      },
      "actionTypeQuery": {
        "name": "type",
        "in": "query",
        "description": "Type of user action to filter by.",
        "required": true,
        "schema": { "type": "string" },
        "example": "click"
      }
    },
    "schemas": {
      "Data360Request": {
        "type": "object",
        "properties": {
          "databasE_ID": {
            "type": "string",
            "nullable": true
          },
          "indicator": {
            "type": "string",
            "nullable": true
          },
          "reF_AREA": {
            "type": "string",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "string",
            "nullable": true
          },
          "urbanisation": {
            "type": "string",
            "nullable": true
          },
          "comP_BREAKDOWN_1": {
            "type": "string",
            "nullable": true
          },
          "comP_BREAKDOWN_2": {
            "type": "string",
            "nullable": true
          },
          "comP_BREAKDOWN_3": {
            "type": "string",
            "nullable": true
          },
          "timE_PERIOD": {
            "type": "string",
            "nullable": true
          },
          "freq": {
            "type": "string",
            "nullable": true
          },
          "uniT_MEASURE": {
            "type": "string",
            "nullable": true
          },
          "uniT_TYPE": {
            "type": "string",
            "nullable": true
          },
          "uniT_MULT": {
            "type": "string",
            "nullable": true
          },
          "timePeriodFrom": {
            "type": "string",
            "nullable": true
          },
          "timePeriodTo": {
            "type": "string",
            "nullable": true
          },
          "isLatestData": {
            "type": "boolean"
          },
          "top": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "bonD_TYPE": {
            "type": "string",
            "nullable": true
          },
          "datE_ISS": {
            "type": "string",
            "nullable": true
          },
          "datE_MAT": {
            "type": "string",
            "nullable": true
          },
          "tenoR_BUCKET": {
            "type": "string",
            "nullable": true
          },
          "issueR_TYPE": {
            "type": "string",
            "nullable": true
          },
          "isS_NAME": {
            "type": "string",
            "nullable": true
          },
          "isin": {
            "type": "string",
            "nullable": true
          },
          "tenor": {
            "type": "string",
            "nullable": true
          },
          "obS_VALUE": {
            "type": "string",
            "nullable": true
          },
          "outstanding": {
            "type": "string",
            "nullable": true
          },
          "deaL_SIZE": {
            "type": "string",
            "nullable": true
          },
          "metric": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "select": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchQuery": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchQueryVector": {
        "type": "object",
        "properties": {
          "count": {
            "type": "boolean",
            "nullable": true
          },
          "facets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "filter": {
            "type": "string",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "select": {
            "type": "string",
            "nullable": true
          },
          "searchFields": {
            "type": "string",
            "nullable": true
          },
          "search": {
            "type": "string",
            "nullable": true
          },
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vectorFilterModeSearch": {
            "type": "string",
            "nullable": true
          },
          "vectorQueries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VectorQueryModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Threshold": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAction": {
        "type": "object",
        "properties": {
          "indicator": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VectorQueryModel": {
        "type": "object",
        "properties": {
          "vector": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "nullable": true
          },
          "fields": {
            "type": "string",
            "nullable": true
          },
          "kind": {
            "type": "string",
            "nullable": true
          },
          "k": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          }
        },
        "additionalProperties": false
      }
    }
  }
}